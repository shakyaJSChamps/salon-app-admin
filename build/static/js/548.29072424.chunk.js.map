{"version":3,"file":"static/js/548.29072424.chunk.js","mappings":"gQAyJA,QAhJA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOXC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,2BACrCC,SAAUJ,EAAAA,KACPG,SAAS,8BACTE,IAAI,EAAG,sCACPC,QAAQ,QAAS,8BACjBA,QAAQ,QAAS,wCACjBA,QAAQ,QAAS,yCACjBA,QAAQ,QAAS,iCAGfC,EAAYC,GAAiBC,EAAAA,UAAe,IAE7C,OACJC,EAAM,OACNC,EAAM,QACNC,EAAO,aACPC,EAAY,aACZC,EAAY,QACZC,EAAO,MACPC,IACEC,EAAAA,EAAAA,IAAU,CACZC,cA3BoB,CACpBhB,MAAO,GACPE,SAAU,IA0BVL,iBAAkBA,EAClBoB,SAAUC,MAAOV,EAAMW,KAAqB,IAAnB,UAAEC,GAAWD,EAEpC,UACQtB,EAAiBwB,SAASb,GAEhCb,GAAS2B,EAAAA,EAAAA,IAAW,cACpBF,IACAd,GAAc,GACdb,EAAS,aACX,CAAE,MAAO8B,GACPC,QAAQD,MAAM,oBAAqBA,EAAMd,OAC3C,KAIJ,OACEgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,MAAKH,UACxBF,EAAAA,EAAAA,MAACM,EAAAA,EAAG,CAACD,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,EAAGH,UAAU,WAAUH,UAC9BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,aACU,KACXC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKM,IAAKC,EAAOC,IAAI,sBAI3BR,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CACFC,GAAI,EACJH,UAAU,4DAA2DH,UAErEF,EAAAA,EAAAA,MAAA,MAAIK,UAAU,eAAcH,SAAA,CAAC,gBACfC,EAAAA,EAAAA,KAAA,UACZA,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,kBAG9BC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACF,UAAU,WAAUH,UACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBAIVC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6DAA4DH,UACzEF,EAAAA,EAAAA,MAAA,QAAMK,UAAU,iBAAiBb,SAAUL,EAAae,SAAA,EACtDF,EAAAA,EAAAA,MAAA,SAAOK,UAAU,YAAWH,SAAA,CAAC,wCAE3BC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SACEE,UAAU,QACVO,YAAY,4BACZC,KAAK,QACLC,GAAG,QACHC,MAAOhC,EAAOR,MACdyC,SAAU9B,IAEXD,EAAQV,OAASS,EAAOT,QACvB4B,EAAAA,EAAAA,KAAA,QAAME,UAAU,0BAAyBH,SAAElB,EAAOT,YAGtD4B,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,SAAOK,UAAU,OAAMH,SAAA,CAAC,uBAEtBC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SACEE,UAAU,QACVQ,KAAK,WACLC,GAAG,WACHF,YAAY,WACZG,MAAOhC,EAAON,SACduC,SAAU9B,IAEXD,EAAQR,UAAYO,EAAOP,WAC1B0B,EAAAA,EAAAA,KAAA,QAAME,UAAU,0BAAyBH,SAAElB,EAAOP,eAGtDuB,EAAAA,EAAAA,MAAA,OAAKK,UAAU,yDAAwDH,SAAA,EACrEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACEE,UAAU,WACVY,KAAK,WACLH,GAAG,aACHI,QAAStC,EACToC,SAAUA,IAAMnC,GAAeD,MAEjCuB,EAAAA,EAAAA,KAAA,SAAOE,UAAU,OAAMH,SAAC,qBAE1BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,UAC1BC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAI,yBAA0Bf,UAAU,YAAWH,SAAC,0BAK9DC,EAAAA,EAAAA,KAAA,UACEE,UAAS,UAAAgB,OACLjC,GAAWC,GAAST,EAA0B,GAAZ,WAEtCqC,KAAK,SACLK,UAAWlC,IAAYC,IAAUT,EAAWsB,SAC7C,cAGEd,IAAYC,IAAUT,KACvBuB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,+BAA8BH,SAAC,oEAQ1D,C","sources":["Component/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport Dlogo from \"../assets/image/d-logo.png\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { storeToken } from \"../features/authInfo\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"Please enter your email\"),\r\n    password: Yup.string()\r\n      .required(\"Please enter your password\")\r\n      .min(8, \"Password must be 8 characters long\")\r\n      .matches(/[0-9]/, \"Password requires a number\")\r\n      .matches(/[a-z]/, \"Password requires a lowercase letter\")\r\n      .matches(/[A-Z]/, \"Password requires an uppercase letter\")\r\n      .matches(/[^\\w]/, \"Password requires a symbol\"),\r\n  });\r\n\r\n  const [rememberMe, setRememberMe] = React.useState(false);\r\n\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleChange,\r\n    handleSubmit,\r\n    isValid,\r\n    dirty,\r\n  } = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      // console.log(\"Values :: \", values);\r\n      try {\r\n        await validationSchema.validate(values);\r\n        // console.log(\"Validation passed\");\r\n        dispatch(storeToken(\"daskldjaj\"));\r\n        resetForm();\r\n        setRememberMe(false);\r\n        navigate(\"/dashboard\");\r\n      } catch (error) {\r\n        console.error(\"Validation error:\", error.errors);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"p-0\">\r\n        <Row className=\"m-0 p-0\">\r\n          <Col sm={8} className=\"p-0 mt-4\">\r\n            <p>\r\n              Welcome to{\" \"}\r\n              <span>\r\n                <img src={Dlogo} alt=\"dlogo.png\" />\r\n              </span>\r\n            </p>\r\n          </Col>\r\n          <Col\r\n            sm={4}\r\n            className=\"p-0 d-flex justify-content-center align-items-center mt-4\"\r\n          >\r\n            <h6 className=\"sign-account\">\r\n              No Account? <br />\r\n              <span className=\"sign-up\">Sign up</span>\r\n            </h6>\r\n          </Col>\r\n          <Col className=\"p-0 mt-3\">\r\n            <h1>Sign in</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div className=\"main-form d-flex justify-content-center align-items-center\">\r\n        <form className=\"form mt-3 mb-2\" onSubmit={handleSubmit}>\r\n          <label className=\"text mb-3\">\r\n            Enter your username or email address\r\n            <br />\r\n            <input\r\n              className=\"input\"\r\n              placeholder=\"username or email address\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n            />\r\n            {touched.email && errors.email && (\r\n              <span className=\"error text-danger small\">{errors.email}</span>\r\n            )}\r\n          </label>\r\n          <br />\r\n          <label className=\"text\">\r\n            Enter your Password\r\n            <br />\r\n            <input\r\n              className=\"input\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n            />\r\n            {touched.password && errors.password && (\r\n              <span className=\"error text-danger small\">{errors.password}</span>\r\n            )}\r\n          </label>\r\n          <div className=\"checkbox-main d-flex justify-content-between mt-3 mb-3\">\r\n            <div className=\"checkbox\">\r\n              <input\r\n                className=\"checkbox\"\r\n                type=\"checkbox\"\r\n                id=\"rememberMe\"\r\n                checked={rememberMe}\r\n                onChange={() => setRememberMe(!rememberMe)}\r\n              />\r\n              <label className=\"px-1\">Remember me?</label>\r\n            </div>\r\n            <div className=\"forget-link\">\r\n              <Link to={\"/admin/forget-password\"} className=\"para mt-4\">\r\n                Forgot Password\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className={`button ${\r\n              !(isValid && dirty && rememberMe) ? \"disable\" : \"\"\r\n            }`}\r\n            type=\"submit\"\r\n            disabled={!isValid || !dirty || !rememberMe}\r\n          >\r\n            Sign in\r\n          </button>\r\n          {(!isValid || !dirty || !rememberMe) && (\r\n            <div className=\"error text-danger small mt-2\">\r\n              Please fill in all fields and check the Remember me box.\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","validationSchema","Yup","shape","email","required","password","min","matches","rememberMe","setRememberMe","React","values","errors","touched","handleChange","handleSubmit","isValid","dirty","useFormik","initialValues","onSubmit","async","_ref","resetForm","validate","storeToken","error","console","_jsxs","_Fragment","children","_jsx","Container","className","Row","Col","sm","src","Dlogo","alt","placeholder","name","id","value","onChange","type","checked","Link","to","concat","disabled"],"sourceRoot":""}